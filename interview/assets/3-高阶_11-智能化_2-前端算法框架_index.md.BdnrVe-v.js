import{_ as e,c as o,o as t,ae as r}from"./chunks/framework.a0lWT1vU.js";const b=JSON.parse('{"title":"前端算法框架","description":"","frontmatter":{"title":"前端算法框架"},"headers":[],"relativePath":"3-高阶/11-智能化/2-前端算法框架/index.md","filePath":"3-高阶/11-智能化/2-前端算法框架/index.md"}'),i={name:"3-高阶/11-智能化/2-前端算法框架/index.md"};function l(h,a,n,d,s,c){return t(),o("div",null,a[0]||(a[0]=[r('<h2 id="tensorflow-js" tabindex="-1">Tensorflow.js <a class="header-anchor" href="#tensorflow-js" aria-label="Permalink to &quot;Tensorflow.js&quot;">​</a></h2><h2 id="datacook" tabindex="-1">datacook <a class="header-anchor" href="#datacook" aria-label="Permalink to &quot;datacook&quot;">​</a></h2><h3 id="特征工程" tabindex="-1">特征工程 <a class="header-anchor" href="#特征工程" aria-label="Permalink to &quot;特征工程&quot;">​</a></h3><h3 id="数据可视化" tabindex="-1">数据可视化 <a class="header-anchor" href="#数据可视化" aria-label="Permalink to &quot;数据可视化&quot;">​</a></h3><h3 id="传统机器学习算法" tabindex="-1">传统机器学习算法 <a class="header-anchor" href="#传统机器学习算法" aria-label="Permalink to &quot;传统机器学习算法&quot;">​</a></h3><h2 id="pipcook" tabindex="-1">Pipcook <a class="header-anchor" href="#pipcook" aria-label="Permalink to &quot;Pipcook&quot;">​</a></h2><h3 id="神经网络算法概述" tabindex="-1">神经网络算法概述 <a class="header-anchor" href="#神经网络算法概述" aria-label="Permalink to &quot;神经网络算法概述&quot;">​</a></h3><h3 id="如何定义神经网络" tabindex="-1">如何定义神经网络 <a class="header-anchor" href="#如何定义神经网络" aria-label="Permalink to &quot;如何定义神经网络&quot;">​</a></h3><h3 id="前端机器学习生态-boa" tabindex="-1">前端机器学习生态（Boa） <a class="header-anchor" href="#前端机器学习生态-boa" aria-label="Permalink to &quot;前端机器学习生态（Boa）&quot;">​</a></h3><h3 id="模型部署" tabindex="-1">模型部署 <a class="header-anchor" href="#模型部署" aria-label="Permalink to &quot;模型部署&quot;">​</a></h3><h3 id="模型优化" tabindex="-1">模型优化 <a class="header-anchor" href="#模型优化" aria-label="Permalink to &quot;模型优化&quot;">​</a></h3>',11)]))}const f=e(i,[["render",l]]);export{b as __pageData,f as default};
