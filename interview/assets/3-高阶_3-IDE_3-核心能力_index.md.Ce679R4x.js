import{_ as e,c as o,o as r,ae as t}from"./chunks/framework.a0lWT1vU.js";const u=JSON.parse('{"title":"核心能力","description":"","frontmatter":{"title":"核心能力"},"headers":[],"relativePath":"3-高阶/3-IDE/3-核心能力/index.md","filePath":"3-高阶/3-IDE/3-核心能力/index.md"}'),n={name:"3-高阶/3-IDE/3-核心能力/index.md"};function i(d,a,l,c,s,h){return r(),o("div",null,a[0]||(a[0]=[t('<h2 id="通信服务" tabindex="-1">通信服务 <a class="header-anchor" href="#通信服务" aria-label="Permalink to &quot;通信服务&quot;">​</a></h2><h3 id="遵循基于-jsonrpc-2-0-协议-使用-vscode-jsonrpc" tabindex="-1">遵循基于 JSONRPC 2.0 协议，使用 vscode-jsonrpc <a class="header-anchor" href="#遵循基于-jsonrpc-2-0-协议-使用-vscode-jsonrpc" aria-label="Permalink to &quot;遵循基于 JSONRPC 2.0 协议，使用 vscode-jsonrpc&quot;">​</a></h3><h2 id="插件体系" tabindex="-1">插件体系 <a class="header-anchor" href="#插件体系" aria-label="Permalink to &quot;插件体系&quot;">​</a></h2><h3 id="兼容-vs-code-插件协议-自有-kaitian-插件-api-扩展" tabindex="-1">兼容 VS Code 插件协议，自有 KAITIAN 插件 API 扩展 <a class="header-anchor" href="#兼容-vs-code-插件协议-自有-kaitian-插件-api-扩展" aria-label="Permalink to &quot;兼容 VS Code 插件协议，自有 KAITIAN 插件 API 扩展&quot;">​</a></h3><h2 id="编辑器-lsp" tabindex="-1">编辑器（LSP） <a class="header-anchor" href="#编辑器-lsp" aria-label="Permalink to &quot;编辑器（LSP）&quot;">​</a></h2><h3 id="monaco-editor、language-server-protocol" tabindex="-1">Monaco Editor、Language Server Protocol <a class="header-anchor" href="#monaco-editor、language-server-protocol" aria-label="Permalink to &quot;Monaco Editor、Language Server Protocol&quot;">​</a></h3><h2 id="调试服务" tabindex="-1">调试服务 <a class="header-anchor" href="#调试服务" aria-label="Permalink to &quot;调试服务&quot;">​</a></h2><h3 id="debug-adapter-protocol" tabindex="-1">Debug Adapter Protocol <a class="header-anchor" href="#debug-adapter-protocol" aria-label="Permalink to &quot;Debug Adapter Protocol&quot;">​</a></h3>',8)]))}const P=e(n,[["render",i]]);export{u as __pageData,P as default};
